name: Deploy to npm

on:
  release:
    types: [ published ]
concurrency:
  # For pull requests, cancel all currently-running jobs for this workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  FORCE_COLOR: 1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://registry.npmjs.org'
      - name: Get dependency version
        id: dependency-version
        run: |
          echo "DEPENDENCY_VERSION=$(cat .dependency-version)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ steps.dependency-version.outputs.DEPENDENCY_VERSION }}
      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Build Storybook
        run: npm run build:storybook
      - name: Upload Storybook build
        uses: actions/upload-artifact@v3
        with:
          name: storybook-build
          path: storybook-static
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://registry.npmjs.org'
      - name: Get dependency version
        id: dependency-version
        run: |
          echo "DEPENDENCY_VERSION=$(cat .dependency-version)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ steps.dependency-version.outputs.DEPENDENCY_VERSION }}
      - name: Download Storybook build
        uses: actions/download-artifact@v3
        with:
          name: storybook-build
          path: storybook-static
      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Storybook tests
        run: npm run test:ci
  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: 'https://registry.npmjs.org'
      - name: Get dependency version
        id: dependency-version
        run: |
          echo "DEPENDENCY_VERSION=$(cat .dependency-version)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ steps.dependency-version.outputs.DEPENDENCY_VERSION }}
      # - name: Install dependencies
      #   # if: steps.cache-node-modules.outputs.cache-hit != 'true'
      #   run: npm ci
      - name: Build UI library
        run: npm run build
      - name: Publish @sikaeducation/ui to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Storybook build
        uses: actions/download-artifact@v3
        with:
          name: storybook-build
          path: storybook-static
      - name: Deploy Storybook to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: storybook-static
